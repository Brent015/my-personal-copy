/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as CheckoutIndexImport } from './routes/checkout/index'
import { Route as SearchResultsImport } from './routes/search/results'
import { Route as SearchOrganizerImport } from './routes/search/organizer'
import { Route as SearchGroupImport } from './routes/search/group'
import { Route as SearchDestinationImport } from './routes/search/destination'
import { Route as SearchDateImport } from './routes/search/date'
import { Route as OrganizersCategoryImport } from './routes/organizers/$category'
import { Route as OrganizerOrganizerIdImport } from './routes/organizer/$organizerId'
import { Route as HomeHomeImport } from './routes/home/_home'
import { Route as EventsGalleryImport } from './routes/events/gallery'
import { Route as EventsEventIdImport } from './routes/events/$eventId'
import { Route as HomeHomeOrganizersImport } from './routes/home/_home/organizers'
import { Route as HomeHomeListingImport } from './routes/home/_home/listing'
import { Route as HomeHomeEventsImport } from './routes/home/_home/events'
import { Route as EventsEventIdPackageIdImport } from './routes/events/$eventId/$packageId'
import { Route as EventsEventIdPackageIdIndexImport } from './routes/events/$eventId/$packageId.index'
import { Route as EventsEventIdPackageIdItineraryImport } from './routes/events/$eventId/$packageId.itinerary'

// Create Virtual Routes

const HomeImport = createFileRoute('/home')()

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const SearchIndexRoute = SearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutIndexRoute = CheckoutIndexImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRoute,
} as any)

const SearchResultsRoute = SearchResultsImport.update({
  id: '/search/results',
  path: '/search/results',
  getParentRoute: () => rootRoute,
} as any)

const SearchOrganizerRoute = SearchOrganizerImport.update({
  id: '/search/organizer',
  path: '/search/organizer',
  getParentRoute: () => rootRoute,
} as any)

const SearchGroupRoute = SearchGroupImport.update({
  id: '/search/group',
  path: '/search/group',
  getParentRoute: () => rootRoute,
} as any)

const SearchDestinationRoute = SearchDestinationImport.update({
  id: '/search/destination',
  path: '/search/destination',
  getParentRoute: () => rootRoute,
} as any)

const SearchDateRoute = SearchDateImport.update({
  id: '/search/date',
  path: '/search/date',
  getParentRoute: () => rootRoute,
} as any)

const OrganizersCategoryRoute = OrganizersCategoryImport.update({
  id: '/organizers/$category',
  path: '/organizers/$category',
  getParentRoute: () => rootRoute,
} as any)

const OrganizerOrganizerIdRoute = OrganizerOrganizerIdImport.update({
  id: '/organizer/$organizerId',
  path: '/organizer/$organizerId',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeRoute = HomeHomeImport.update({
  id: '/_home',
  getParentRoute: () => HomeRoute,
} as any)

const EventsGalleryRoute = EventsGalleryImport.update({
  id: '/events/gallery',
  path: '/events/gallery',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdRoute = EventsEventIdImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeOrganizersRoute = HomeHomeOrganizersImport.update({
  id: '/organizers',
  path: '/organizers',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeListingRoute = HomeHomeListingImport.update({
  id: '/listing',
  path: '/listing',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeEventsRoute = HomeHomeEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => HomeHomeRoute,
} as any)

const EventsEventIdPackageIdRoute = EventsEventIdPackageIdImport.update({
  id: '/$packageId',
  path: '/$packageId',
  getParentRoute: () => EventsEventIdRoute,
} as any)

const EventsEventIdPackageIdIndexRoute =
  EventsEventIdPackageIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => EventsEventIdPackageIdRoute,
  } as any)

const EventsEventIdPackageIdItineraryRoute =
  EventsEventIdPackageIdItineraryImport.update({
    id: '/itinerary',
    path: '/itinerary',
    getParentRoute: () => EventsEventIdPackageIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/events/gallery': {
      id: '/events/gallery'
      path: '/events/gallery'
      fullPath: '/events/gallery'
      preLoaderRoute: typeof EventsGalleryImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/home/_home': {
      id: '/home/_home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeImport
      parentRoute: typeof HomeRoute
    }
    '/organizer/$organizerId': {
      id: '/organizer/$organizerId'
      path: '/organizer/$organizerId'
      fullPath: '/organizer/$organizerId'
      preLoaderRoute: typeof OrganizerOrganizerIdImport
      parentRoute: typeof rootRoute
    }
    '/organizers/$category': {
      id: '/organizers/$category'
      path: '/organizers/$category'
      fullPath: '/organizers/$category'
      preLoaderRoute: typeof OrganizersCategoryImport
      parentRoute: typeof rootRoute
    }
    '/search/date': {
      id: '/search/date'
      path: '/search/date'
      fullPath: '/search/date'
      preLoaderRoute: typeof SearchDateImport
      parentRoute: typeof rootRoute
    }
    '/search/destination': {
      id: '/search/destination'
      path: '/search/destination'
      fullPath: '/search/destination'
      preLoaderRoute: typeof SearchDestinationImport
      parentRoute: typeof rootRoute
    }
    '/search/group': {
      id: '/search/group'
      path: '/search/group'
      fullPath: '/search/group'
      preLoaderRoute: typeof SearchGroupImport
      parentRoute: typeof rootRoute
    }
    '/search/organizer': {
      id: '/search/organizer'
      path: '/search/organizer'
      fullPath: '/search/organizer'
      preLoaderRoute: typeof SearchOrganizerImport
      parentRoute: typeof rootRoute
    }
    '/search/results': {
      id: '/search/results'
      path: '/search/results'
      fullPath: '/search/results'
      preLoaderRoute: typeof SearchResultsImport
      parentRoute: typeof rootRoute
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId/$packageId': {
      id: '/events/$eventId/$packageId'
      path: '/$packageId'
      fullPath: '/events/$eventId/$packageId'
      preLoaderRoute: typeof EventsEventIdPackageIdImport
      parentRoute: typeof EventsEventIdImport
    }
    '/home/_home/events': {
      id: '/home/_home/events'
      path: '/events'
      fullPath: '/home/events'
      preLoaderRoute: typeof HomeHomeEventsImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/listing': {
      id: '/home/_home/listing'
      path: '/listing'
      fullPath: '/home/listing'
      preLoaderRoute: typeof HomeHomeListingImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/organizers': {
      id: '/home/_home/organizers'
      path: '/organizers'
      fullPath: '/home/organizers'
      preLoaderRoute: typeof HomeHomeOrganizersImport
      parentRoute: typeof HomeHomeImport
    }
    '/events/$eventId/$packageId/itinerary': {
      id: '/events/$eventId/$packageId/itinerary'
      path: '/itinerary'
      fullPath: '/events/$eventId/$packageId/itinerary'
      preLoaderRoute: typeof EventsEventIdPackageIdItineraryImport
      parentRoute: typeof EventsEventIdPackageIdImport
    }
    '/events/$eventId/$packageId/': {
      id: '/events/$eventId/$packageId/'
      path: '/'
      fullPath: '/events/$eventId/$packageId/'
      preLoaderRoute: typeof EventsEventIdPackageIdIndexImport
      parentRoute: typeof EventsEventIdPackageIdImport
    }
  }
}

// Create and export the route tree

interface EventsEventIdPackageIdRouteChildren {
  EventsEventIdPackageIdItineraryRoute: typeof EventsEventIdPackageIdItineraryRoute
  EventsEventIdPackageIdIndexRoute: typeof EventsEventIdPackageIdIndexRoute
}

const EventsEventIdPackageIdRouteChildren: EventsEventIdPackageIdRouteChildren =
  {
    EventsEventIdPackageIdItineraryRoute: EventsEventIdPackageIdItineraryRoute,
    EventsEventIdPackageIdIndexRoute: EventsEventIdPackageIdIndexRoute,
  }

const EventsEventIdPackageIdRouteWithChildren =
  EventsEventIdPackageIdRoute._addFileChildren(
    EventsEventIdPackageIdRouteChildren,
  )

interface EventsEventIdRouteChildren {
  EventsEventIdPackageIdRoute: typeof EventsEventIdPackageIdRouteWithChildren
}

const EventsEventIdRouteChildren: EventsEventIdRouteChildren = {
  EventsEventIdPackageIdRoute: EventsEventIdPackageIdRouteWithChildren,
}

const EventsEventIdRouteWithChildren = EventsEventIdRoute._addFileChildren(
  EventsEventIdRouteChildren,
)

interface HomeHomeRouteChildren {
  HomeHomeEventsRoute: typeof HomeHomeEventsRoute
  HomeHomeListingRoute: typeof HomeHomeListingRoute
  HomeHomeOrganizersRoute: typeof HomeHomeOrganizersRoute
}

const HomeHomeRouteChildren: HomeHomeRouteChildren = {
  HomeHomeEventsRoute: HomeHomeEventsRoute,
  HomeHomeListingRoute: HomeHomeListingRoute,
  HomeHomeOrganizersRoute: HomeHomeOrganizersRoute,
}

const HomeHomeRouteWithChildren = HomeHomeRoute._addFileChildren(
  HomeHomeRouteChildren,
)

interface HomeRouteChildren {
  HomeHomeRoute: typeof HomeHomeRouteWithChildren
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeRoute: HomeHomeRouteWithChildren,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

export interface FileRoutesByFullPath {
  '/events/$eventId': typeof EventsEventIdRouteWithChildren
  '/events/gallery': typeof EventsGalleryRoute
  '/home': typeof HomeHomeRouteWithChildren
  '/organizer/$organizerId': typeof OrganizerOrganizerIdRoute
  '/organizers/$category': typeof OrganizersCategoryRoute
  '/search/date': typeof SearchDateRoute
  '/search/destination': typeof SearchDestinationRoute
  '/search/group': typeof SearchGroupRoute
  '/search/organizer': typeof SearchOrganizerRoute
  '/search/results': typeof SearchResultsRoute
  '/checkout': typeof CheckoutIndexRoute
  '/search': typeof SearchIndexRoute
  '/events/$eventId/$packageId': typeof EventsEventIdPackageIdRouteWithChildren
  '/home/events': typeof HomeHomeEventsRoute
  '/home/listing': typeof HomeHomeListingRoute
  '/home/organizers': typeof HomeHomeOrganizersRoute
  '/events/$eventId/$packageId/itinerary': typeof EventsEventIdPackageIdItineraryRoute
  '/events/$eventId/$packageId/': typeof EventsEventIdPackageIdIndexRoute
}

export interface FileRoutesByTo {
  '/events/$eventId': typeof EventsEventIdRouteWithChildren
  '/events/gallery': typeof EventsGalleryRoute
  '/home': typeof HomeHomeRouteWithChildren
  '/organizer/$organizerId': typeof OrganizerOrganizerIdRoute
  '/organizers/$category': typeof OrganizersCategoryRoute
  '/search/date': typeof SearchDateRoute
  '/search/destination': typeof SearchDestinationRoute
  '/search/group': typeof SearchGroupRoute
  '/search/organizer': typeof SearchOrganizerRoute
  '/search/results': typeof SearchResultsRoute
  '/checkout': typeof CheckoutIndexRoute
  '/search': typeof SearchIndexRoute
  '/home/events': typeof HomeHomeEventsRoute
  '/home/listing': typeof HomeHomeListingRoute
  '/home/organizers': typeof HomeHomeOrganizersRoute
  '/events/$eventId/$packageId/itinerary': typeof EventsEventIdPackageIdItineraryRoute
  '/events/$eventId/$packageId': typeof EventsEventIdPackageIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/events/$eventId': typeof EventsEventIdRouteWithChildren
  '/events/gallery': typeof EventsGalleryRoute
  '/home': typeof HomeRouteWithChildren
  '/home/_home': typeof HomeHomeRouteWithChildren
  '/organizer/$organizerId': typeof OrganizerOrganizerIdRoute
  '/organizers/$category': typeof OrganizersCategoryRoute
  '/search/date': typeof SearchDateRoute
  '/search/destination': typeof SearchDestinationRoute
  '/search/group': typeof SearchGroupRoute
  '/search/organizer': typeof SearchOrganizerRoute
  '/search/results': typeof SearchResultsRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/search/': typeof SearchIndexRoute
  '/events/$eventId/$packageId': typeof EventsEventIdPackageIdRouteWithChildren
  '/home/_home/events': typeof HomeHomeEventsRoute
  '/home/_home/listing': typeof HomeHomeListingRoute
  '/home/_home/organizers': typeof HomeHomeOrganizersRoute
  '/events/$eventId/$packageId/itinerary': typeof EventsEventIdPackageIdItineraryRoute
  '/events/$eventId/$packageId/': typeof EventsEventIdPackageIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/events/$eventId'
    | '/events/gallery'
    | '/home'
    | '/organizer/$organizerId'
    | '/organizers/$category'
    | '/search/date'
    | '/search/destination'
    | '/search/group'
    | '/search/organizer'
    | '/search/results'
    | '/checkout'
    | '/search'
    | '/events/$eventId/$packageId'
    | '/home/events'
    | '/home/listing'
    | '/home/organizers'
    | '/events/$eventId/$packageId/itinerary'
    | '/events/$eventId/$packageId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/events/$eventId'
    | '/events/gallery'
    | '/home'
    | '/organizer/$organizerId'
    | '/organizers/$category'
    | '/search/date'
    | '/search/destination'
    | '/search/group'
    | '/search/organizer'
    | '/search/results'
    | '/checkout'
    | '/search'
    | '/home/events'
    | '/home/listing'
    | '/home/organizers'
    | '/events/$eventId/$packageId/itinerary'
    | '/events/$eventId/$packageId'
  id:
    | '__root__'
    | '/events/$eventId'
    | '/events/gallery'
    | '/home'
    | '/home/_home'
    | '/organizer/$organizerId'
    | '/organizers/$category'
    | '/search/date'
    | '/search/destination'
    | '/search/group'
    | '/search/organizer'
    | '/search/results'
    | '/checkout/'
    | '/search/'
    | '/events/$eventId/$packageId'
    | '/home/_home/events'
    | '/home/_home/listing'
    | '/home/_home/organizers'
    | '/events/$eventId/$packageId/itinerary'
    | '/events/$eventId/$packageId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  EventsEventIdRoute: typeof EventsEventIdRouteWithChildren
  EventsGalleryRoute: typeof EventsGalleryRoute
  HomeRoute: typeof HomeRouteWithChildren
  OrganizerOrganizerIdRoute: typeof OrganizerOrganizerIdRoute
  OrganizersCategoryRoute: typeof OrganizersCategoryRoute
  SearchDateRoute: typeof SearchDateRoute
  SearchDestinationRoute: typeof SearchDestinationRoute
  SearchGroupRoute: typeof SearchGroupRoute
  SearchOrganizerRoute: typeof SearchOrganizerRoute
  SearchResultsRoute: typeof SearchResultsRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  EventsEventIdRoute: EventsEventIdRouteWithChildren,
  EventsGalleryRoute: EventsGalleryRoute,
  HomeRoute: HomeRouteWithChildren,
  OrganizerOrganizerIdRoute: OrganizerOrganizerIdRoute,
  OrganizersCategoryRoute: OrganizersCategoryRoute,
  SearchDateRoute: SearchDateRoute,
  SearchDestinationRoute: SearchDestinationRoute,
  SearchGroupRoute: SearchGroupRoute,
  SearchOrganizerRoute: SearchOrganizerRoute,
  SearchResultsRoute: SearchResultsRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/events/$eventId",
        "/events/gallery",
        "/home",
        "/organizer/$organizerId",
        "/organizers/$category",
        "/search/date",
        "/search/destination",
        "/search/group",
        "/search/organizer",
        "/search/results",
        "/checkout/",
        "/search/"
      ]
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx",
      "children": [
        "/events/$eventId/$packageId"
      ]
    },
    "/events/gallery": {
      "filePath": "events/gallery.tsx"
    },
    "/home": {
      "filePath": "home",
      "children": [
        "/home/_home"
      ]
    },
    "/home/_home": {
      "filePath": "home/_home.tsx",
      "parent": "/home",
      "children": [
        "/home/_home/events",
        "/home/_home/listing",
        "/home/_home/organizers"
      ]
    },
    "/organizer/$organizerId": {
      "filePath": "organizer/$organizerId.tsx"
    },
    "/organizers/$category": {
      "filePath": "organizers/$category.tsx"
    },
    "/search/date": {
      "filePath": "search/date.tsx"
    },
    "/search/destination": {
      "filePath": "search/destination.tsx"
    },
    "/search/group": {
      "filePath": "search/group.tsx"
    },
    "/search/organizer": {
      "filePath": "search/organizer.tsx"
    },
    "/search/results": {
      "filePath": "search/results.tsx"
    },
    "/checkout/": {
      "filePath": "checkout/index.tsx"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/events/$eventId/$packageId": {
      "filePath": "events/$eventId/$packageId.tsx",
      "parent": "/events/$eventId",
      "children": [
        "/events/$eventId/$packageId/itinerary",
        "/events/$eventId/$packageId/"
      ]
    },
    "/home/_home/events": {
      "filePath": "home/_home/events.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/listing": {
      "filePath": "home/_home/listing.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/organizers": {
      "filePath": "home/_home/organizers.tsx",
      "parent": "/home/_home"
    },
    "/events/$eventId/$packageId/itinerary": {
      "filePath": "events/$eventId/$packageId.itinerary.tsx",
      "parent": "/events/$eventId/$packageId"
    },
    "/events/$eventId/$packageId/": {
      "filePath": "events/$eventId/$packageId.index.tsx",
      "parent": "/events/$eventId/$packageId"
    }
  }
}
ROUTE_MANIFEST_END */
