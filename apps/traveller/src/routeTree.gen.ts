/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeHomeImport } from './routes/home/_home'
import { Route as EventsEventIdImport } from './routes/events/$eventId'
import { Route as HomeHomeListingImport } from './routes/home/_home/listing'
import { Route as HomeHomeEventsImport } from './routes/home/_home/events'
import { Route as HomeHomeOrganizersIndexImport } from './routes/home/_home/organizers/index'
import { Route as HomeHomeOrganizersCategoryCategoryImport } from './routes/home/_home/organizers/category.$category'

// Create Virtual Routes

const HomeImport = createFileRoute('/home')()

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeRoute = HomeHomeImport.update({
  id: '/_home',
  getParentRoute: () => HomeRoute,
} as any)

const EventsEventIdRoute = EventsEventIdImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeListingRoute = HomeHomeListingImport.update({
  id: '/listing',
  path: '/listing',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeEventsRoute = HomeHomeEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeOrganizersIndexRoute = HomeHomeOrganizersIndexImport.update({
  id: '/organizers/',
  path: '/organizers/',
  getParentRoute: () => HomeHomeRoute,
} as any)

const HomeHomeOrganizersCategoryCategoryRoute =
  HomeHomeOrganizersCategoryCategoryImport.update({
    id: '/organizers/category/$category',
    path: '/organizers/category/$category',
    getParentRoute: () => HomeHomeRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/home/_home': {
      id: '/home/_home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeImport
      parentRoute: typeof HomeRoute
    }
    '/home/_home/events': {
      id: '/home/_home/events'
      path: '/events'
      fullPath: '/home/events'
      preLoaderRoute: typeof HomeHomeEventsImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/listing': {
      id: '/home/_home/listing'
      path: '/listing'
      fullPath: '/home/listing'
      preLoaderRoute: typeof HomeHomeListingImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/organizers/': {
      id: '/home/_home/organizers/'
      path: '/organizers'
      fullPath: '/home/organizers'
      preLoaderRoute: typeof HomeHomeOrganizersIndexImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/_home/organizers/category/$category': {
      id: '/home/_home/organizers/category/$category'
      path: '/organizers/category/$category'
      fullPath: '/home/organizers/category/$category'
      preLoaderRoute: typeof HomeHomeOrganizersCategoryCategoryImport
      parentRoute: typeof HomeHomeImport
    }
  }
}

// Create and export the route tree

interface HomeHomeRouteChildren {
  HomeHomeEventsRoute: typeof HomeHomeEventsRoute
  HomeHomeListingRoute: typeof HomeHomeListingRoute
  HomeHomeOrganizersIndexRoute: typeof HomeHomeOrganizersIndexRoute
  HomeHomeOrganizersCategoryCategoryRoute: typeof HomeHomeOrganizersCategoryCategoryRoute
}

const HomeHomeRouteChildren: HomeHomeRouteChildren = {
  HomeHomeEventsRoute: HomeHomeEventsRoute,
  HomeHomeListingRoute: HomeHomeListingRoute,
  HomeHomeOrganizersIndexRoute: HomeHomeOrganizersIndexRoute,
  HomeHomeOrganizersCategoryCategoryRoute:
    HomeHomeOrganizersCategoryCategoryRoute,
}

const HomeHomeRouteWithChildren = HomeHomeRoute._addFileChildren(
  HomeHomeRouteChildren,
)

interface HomeRouteChildren {
  HomeHomeRoute: typeof HomeHomeRouteWithChildren
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeRoute: HomeHomeRouteWithChildren,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

export interface FileRoutesByFullPath {
  '/events/$eventId': typeof EventsEventIdRoute
  '/home': typeof HomeHomeRouteWithChildren
  '/home/events': typeof HomeHomeEventsRoute
  '/home/listing': typeof HomeHomeListingRoute
  '/home/organizers': typeof HomeHomeOrganizersIndexRoute
  '/home/organizers/category/$category': typeof HomeHomeOrganizersCategoryCategoryRoute
}

export interface FileRoutesByTo {
  '/events/$eventId': typeof EventsEventIdRoute
  '/home': typeof HomeHomeRouteWithChildren
  '/home/events': typeof HomeHomeEventsRoute
  '/home/listing': typeof HomeHomeListingRoute
  '/home/organizers': typeof HomeHomeOrganizersIndexRoute
  '/home/organizers/category/$category': typeof HomeHomeOrganizersCategoryCategoryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/home': typeof HomeRouteWithChildren
  '/home/_home': typeof HomeHomeRouteWithChildren
  '/home/_home/events': typeof HomeHomeEventsRoute
  '/home/_home/listing': typeof HomeHomeListingRoute
  '/home/_home/organizers/': typeof HomeHomeOrganizersIndexRoute
  '/home/_home/organizers/category/$category': typeof HomeHomeOrganizersCategoryCategoryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/events/$eventId'
    | '/home'
    | '/home/events'
    | '/home/listing'
    | '/home/organizers'
    | '/home/organizers/category/$category'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/events/$eventId'
    | '/home'
    | '/home/events'
    | '/home/listing'
    | '/home/organizers'
    | '/home/organizers/category/$category'
  id:
    | '__root__'
    | '/events/$eventId'
    | '/home'
    | '/home/_home'
    | '/home/_home/events'
    | '/home/_home/listing'
    | '/home/_home/organizers/'
    | '/home/_home/organizers/category/$category'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  EventsEventIdRoute: typeof EventsEventIdRoute
  HomeRoute: typeof HomeRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  EventsEventIdRoute: EventsEventIdRoute,
  HomeRoute: HomeRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/events/$eventId",
        "/home"
      ]
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx"
    },
    "/home": {
      "filePath": "home",
      "children": [
        "/home/_home"
      ]
    },
    "/home/_home": {
      "filePath": "home/_home.tsx",
      "parent": "/home",
      "children": [
        "/home/_home/events",
        "/home/_home/listing",
        "/home/_home/organizers/",
        "/home/_home/organizers/category/$category"
      ]
    },
    "/home/_home/events": {
      "filePath": "home/_home/events.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/listing": {
      "filePath": "home/_home/listing.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/organizers/": {
      "filePath": "home/_home/organizers/index.tsx",
      "parent": "/home/_home"
    },
    "/home/_home/organizers/category/$category": {
      "filePath": "home/_home/organizers/category.$category.tsx",
      "parent": "/home/_home"
    }
  }
}
ROUTE_MANIFEST_END */
